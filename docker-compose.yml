services:
  frontend:
    build: ./frontend
    ports:
      - "3000:80"
    depends_on:
      - backend

  backend:
    image: 767397667909.dkr.ecr.eu-west-3.amazonaws.com/rfiller:latest
    build: ./backend
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: "postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@{POSTGRES_HOST}:5432/${POSTGRES_DB}"
      OPENAI_API_KEY: "${OPENAI_API_KEY}"
    depends_on:
      - postgres
    networks:
      - backend-db

  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: "${POSTGRES_DB}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_HOST: "${POSTGRES_HOST}"
    ports:
      - "5432:5432"
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    networks:
      - backend-db

  qdrant:
    image: qdrant/qdrant:v1.8.3
    restart: always
    container_name: qdrant
    ports:
      - 6333:6333
    expose:
      - 6333
    volumes:
      - ./qdrant_data:/qdrant/storage
    networks:
      - backend-db

networks:
  backend-db:
    driver: bridge
